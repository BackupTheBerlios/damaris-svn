Bis zur ersten lauffähigen Version:
-----------------------------------

- New / Skript speichern Toolbar-Button (richtig) implementieren
- Stop implementieren
- Warnung, das Dateien überschrieben werden implementieren (beim Start des Exp.)
- sinnvolle XML-Statements durch den Job-Writer ausgeben
- nach verlorenen Methoden gucken, die mittlerweile nicht mehr gebraucht werden (z.b. suspend und wakeup)
- "Successfully parsed blabla.result" und der tatsächlich geparsten Datei stimmen nicht überein (vielleicht nur bei Error-Messages?)
- ResultReader auf mehrere Results pro File umbauen
- Convenience-Functions verbessern, wie z.B. jobs_pending() oder get_variable()
- mehrere Watchpoints implementieren -> "Quelle-Pulldownmenü" (und mehrere Graphen)
- Open-Dialog mit Doppelklick austatten und weniger anfällig für falsche Angaben machen
- Beim Save-File Dialog Warnung implementieren, falls Dateien überschrieben werden
- Fehlersicher machen (alles in Try/Catch Blöcke einschließen und angemessen handeln)

? Skript checken mit Dummycore ?


Auf irgendeine Art erledigt:
----------------------------

Vermutlich erledigt:
- Experiment restartable machen:
  Habe ein paar Konfigurationen getestet (Keine Fehler, Fehler im Experiment Script oder Data Handling Script,
  Fehler bei beiden - jedes Mal ließen sich die Experimente auch nach korrektur mehrere Male starten)
- Core stop/start aus der Oberfläche heraus
  (Achim) core wird von GUI vor JobWriter gestartet
-  Line / Column implementieren ?
  (Achim) wird angezeigt, wäre ganz nett, auch etwas hineinschreiben zu können. 

Verbesserungswürdig, läuft aber:
- Error Results implementieren (-> Zustände einführen)
  Vielleicht findet sich im Laufe der Zeit eine geschicktere Methode, Error-Results zu behandeln.
  Momentan werden sie durchgereicht + Error-Dialog in der Oberfläche angezeigt (sowie in der Console zusätzlich nochmal angezeigt)

Erledigt:
- Absturz bei sofortigem Quit nach Start fixen
- Absturz beim beenden des Programms beheben
