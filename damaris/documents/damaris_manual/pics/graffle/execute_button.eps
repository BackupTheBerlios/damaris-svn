%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (execute_button.eps)
%%CreationDate: (Thu Nov 16 12:06:50 2006)
%%BoundingBox: 0 0 24 24
%%HiResBoundingBox: 0 0 24.0055 24
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 24
userdict begin
DisplayImage
0 0
24.0055 24.0055
12.000000
24 24
0
0
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000CFCECA000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000E1E1E097958F8987818E8C85838078000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000000000000007B797367655F403F3B6866617C7A72000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000DDDCDB9A999253524E1716147675739B999352504A
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000000000000007A797486847D9A9996B7B6B37D7B75000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000000000000008A88836B696478756C5F5D5654534D000000
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000403F3A000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000E4E3E1000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000E2E2E2
B3B3B10000004846419F9D96484641000000888781000000000000000000000000000000
ffffffffffffffffffffffffffffff000000000000000000000000000000000000B0AFAD
A8A7A19F9D969F9D969F9D96908E8697958E807D74484641000000000000000000000000
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
9F9D969F9D96595854605E57898883807D7476746B000000000000000000000000000000
ffffffffffffffffffffffff000000000000000000000000000000000000000000484641
9F9D96605E5743423F2827243634309F9D966D6B63484641000000000000000000000000
ffffffffffff000000000000000000000000000000000000000000000000E2E2E1B6B5AF
9F9D9659585421201E0A0908181816E6E6E4807D7465635C605E57000000000000000000
ffffff000000000000000000000000CFCECA000000000000000000000000000000484641
9F9D968988833634301616148C8B89DFDEDC65635C484641000000000000000000000000
ffffff000000000000E1E1E097958F8987818E8C85838078000000000000000000000000
B0AFA9807D74B6B5AFE6E6E4D5D4D193918B65635C000000000000000000000000000000
ffffff0000000000007B797367655F403F3B6866617C7A72000000000000000000D6D5D2
ABA9A39F9D96807D74807D7476746B76746B5D5C55484641000000000000000000000000
ffffff000000DDDCDB9A999253524E1716147675739B999352504A000000000000000000
59585400000048464176746B484641000000494943000000000000000000000000000000
ffffff0000000000007A797486847D9A9996B7B6B37D7B75000000000000000000000000
00000000000000000042413C000000000000000000000000000000000000000000000000
ffffff0000000000008A88836B696478756C5F5D5654534D000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
ffffff000000000000000000000000403F3A000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000ffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
ffffffffffff000000000000000000000000000000ffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

end
%%PageTrailer
%%Trailer
%%EOF
