%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/Users/markusro/Documents/Diplom/pics/save_as_picture.eps)
%%CreationDate: (Thu Nov 16 12:44:26 2006)
%%BoundingBox: 0 0 18 18
%%HiResBoundingBox: 0 0 17.9978 18
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 18 18
userdict begin
DisplayImage
0 0
17.9978 17.9978
12.000000
24 24
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0B5B7E095578085678746953A37B3FA37B3FA27B3FA27A3DA2793CA1783CA1783B
9F773B9F763B5A5B53075174055072ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5C7E345F7A6B899973726EB5977EB3967CB2957AAE927AAC9177AA8E76A78C75
A48971A28670555A618DA0AD0C4665ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D1C4E6B305E786496ABC2D3DBBCCFD77196A56B8B9D66889B648698618295
5F8193648A9A3A6F892654700C4665ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D0854760955776597ACC0D3DABCCDD565889A5B7C8F58788C56778A537389
5273855D8293396E87004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D0955770A56796696AABFD0D8B9CAD35171862E5E772D5D772C5D762C5B75
2B5B74527587386E86004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D0955780B58796595AABCCED5B6C7CFAFC2CAA9BCC5A3B6C09DB0BA96ABB5
90A6B08BA0AA376C86004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D0954760955771861801E66841E64831C6382196280185F7E185D7C155C7A
1258791355770B5071004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D075175085576095578095577095577085476075274075173054E71044C6F
044A6C02486B014569004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D075074075174075275075175075274075173075072054E71044C6F024A6E
02496C01466B004468004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D054D71054F71074E72075072526E82455C7041596E455E72405A703E576D
3B556A123D5B004468004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D044A6E044C6F044C6F044D6F8FA0AC2E3D541D2A43A1B3BD9AACB690A4AD
889CA5144563004468004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5D7D02496C04496B04496C05486B8FA1AD2D3C531D2A429AADB691A5AE899CA7
82959F1B4865004468004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff0C5C7D02476A01466B01476A084060A0B3BE2D3B521D2A4292A4AE8B9EA98497A1
7C909A1F4A67004468004468075275ffffffffffffffffffffffffffffffffffffffffff
ffffff10608009567801466A004468083D5DA0B4BE5464765161738B9EA98598A27D919B
768A941D48630044680044680A5778ffffffffffffffffffffffffffffffffffffffffff
ffffffffffff1060800B597B0A597A153E5C21435D20435D20425C1F425C1F415A1D415A
1D415A16425D0A597A0B597A155580ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

end
%%PageTrailer
%%Trailer
%%EOF
